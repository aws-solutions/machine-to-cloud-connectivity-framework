// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`M2C2 API test 1`] = `
Object {
  "Resources": Object {
    "TestApiApiRequestValidator315FFB8E": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "TestApiLogsF059572D": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W84",
              "reason": "CloudWatch Logs are already encrypted by default.",
            },
          ],
        },
      },
      "Properties": Object {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TestApiRestApi579783AE": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Machine to Cloud Connectivity Rest API",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "RestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TestApiRestApiAccount4B054010": Object {
      "DependsOn": Array [
        "TestApiRestApi579783AE",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApiCloudWatchRole7A0981F7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TestApiRestApiCloudWatchRole7A0981F7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestApiRestApiDeployment8035F65Bd561fe27d48fdff9e1089d5e9ca6ed70": Object {
      "DependsOn": Array [
        "TestApiApiRequestValidator315FFB8E",
        "TestApiRestApiconnectionsconnectionNameGETB76D4BC9",
        "TestApiRestApiconnectionsconnectionNameOPTIONSE63A7DDF",
        "TestApiRestApiconnectionsconnectionName992FF092",
        "TestApiRestApiconnectionsGET0B0F41B1",
        "TestApiRestApiconnectionsOPTIONS010F3724",
        "TestApiRestApiconnectionsPOST17759160",
        "TestApiRestApiconnections76AE9D89",
        "TestApiRestApigreengrassGETCE5041E2",
        "TestApiRestApigreengrassOPTIONS833FF728",
        "TestApiRestApigreengrassPOST69E9E552",
        "TestApiRestApigreengrassAC71BDB0",
        "TestApiRestApigreengrassuserGET2B731542",
        "TestApiRestApigreengrassuserOPTIONSA9ED2E8C",
        "TestApiRestApigreengrassuserFE264423",
        "TestApiRestApilogsconnectionNameGET983F03C3",
        "TestApiRestApilogsconnectionNameOPTIONS39D9B95A",
        "TestApiRestApilogsconnectionName291A1B7D",
        "TestApiRestApilogsGET7F33C993",
        "TestApiRestApilogsOPTIONS553576CD",
        "TestApiRestApilogs08B6A0C1",
        "TestApiRestApiOPTIONS6E7F9C80",
        "TestApiRestApisitewiseserverNameGET28480BF7",
        "TestApiRestApisitewiseserverNameOPTIONSD095430E",
        "TestApiRestApisitewiseserverNameE957D7D9",
        "TestApiRestApisitewiseOPTIONS69B6BA61",
        "TestApiRestApisitewise684C576E",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W68",
              "reason": "The solution does not require the usage plan.",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TestApiRestApiDeploymentStageprod5DA8E33F": Object {
      "DependsOn": Array [
        "TestApiRestApiAccount4B054010",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W64",
              "reason": "The solution does not require the usage plan.",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "TestApiLogsF059572D",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "TestApiRestApiDeployment8035F65Bd561fe27d48fdff9e1089d5e9ca6ed70",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TestApiRestApiOPTIONS6E7F9C80": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApi579783AE",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApiconnections76AE9D89": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApi579783AE",
            "RootResourceId",
          ],
        },
        "PathPart": "connections",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApiconnectionsGET0B0F41B1": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.querystring.nextToken": "method.request.querystring.nextToken",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.querystring.nextToken": false,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApiconnections76AE9D89",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApiconnectionsOPTIONS010F3724": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApiconnections76AE9D89",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApiconnectionsPOST17759160": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApiconnections76AE9D89",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApiconnectionsconnectionName992FF092": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Ref": "TestApiRestApiconnections76AE9D89",
        },
        "PathPart": "{connectionName}",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApiconnectionsconnectionNameGETB76D4BC9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.path.connectionName": "method.request.path.connectionName",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.connectionName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApiconnectionsconnectionName992FF092",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApiconnectionsconnectionNameOPTIONSE63A7DDF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApiconnectionsconnectionName992FF092",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApigreengrassAC71BDB0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApi579783AE",
            "RootResourceId",
          ],
        },
        "PathPart": "greengrass",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApigreengrassGETCE5041E2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.querystring.nextToken": "method.request.querystring.nextToken",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.querystring.nextToken": false,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApigreengrassAC71BDB0",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApigreengrassOPTIONS833FF728": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApigreengrassAC71BDB0",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApigreengrassPOST69E9E552": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApigreengrassAC71BDB0",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApigreengrassuserFE264423": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Ref": "TestApiRestApigreengrassAC71BDB0",
        },
        "PathPart": "user",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApigreengrassuserGET2B731542": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApigreengrassuserFE264423",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApigreengrassuserOPTIONSA9ED2E8C": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApigreengrassuserFE264423",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApilogs08B6A0C1": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApi579783AE",
            "RootResourceId",
          ],
        },
        "PathPart": "logs",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApilogsGET7F33C993": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.querystring.nextToken": "method.request.querystring.nextToken",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.querystring.nextToken": false,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApilogs08B6A0C1",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApilogsOPTIONS553576CD": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApilogs08B6A0C1",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApilogsconnectionName291A1B7D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Ref": "TestApiRestApilogs08B6A0C1",
        },
        "PathPart": "{connectionName}",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApilogsconnectionNameGET983F03C3": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.path.connectionName": "method.request.path.connectionName",
            "integration.request.querystring.nextToken": "method.request.querystring.nextToken",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.connectionName": true,
          "method.request.querystring.nextToken": false,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApilogsconnectionName291A1B7D",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApilogsconnectionNameOPTIONS39D9B95A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApilogsconnectionName291A1B7D",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApisitewise684C576E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestApiRestApi579783AE",
            "RootResourceId",
          ],
        },
        "PathPart": "sitewise",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApisitewiseOPTIONS69B6BA61": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApisitewise684C576E",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApisitewiseserverNameE957D7D9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "ParentId": Object {
          "Ref": "TestApiRestApisitewise684C576E",
        },
        "PathPart": "{serverName}",
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestApiRestApisitewiseserverNameGET28480BF7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": Object {
            "integration.request.path.serverName": "method.request.path.serverName",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestConnectionBuilderC31A67A8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.path.serverName": true,
        },
        "RequestValidatorId": Object {
          "Ref": "TestApiApiRequestValidator315FFB8E",
        },
        "ResourceId": Object {
          "Ref": "TestApiRestApisitewiseserverNameE957D7D9",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestApiRestApisitewiseserverNameOPTIONSD095430E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-APIG3",
              "reason": "No need to enable WAF as it is up to users.",
            },
            Object {
              "id": "AwsSolutions-APIG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-COG4",
              "reason": "Authorized by IAM",
            },
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AmazonAPIGatewayPushToCloudWatchLogs managed policy is used by CDK itself.",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "TestApiRestApisitewiseserverNameE957D7D9",
        },
        "RestApiId": Object {
          "Ref": "TestApiRestApi579783AE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestConnectionBuilderApiLambdaInvokePermissionEAC36565": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TestConnectionBuilderC31A67A8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "TestApiRestApi579783AE",
              },
              "/*/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestConnectionBuilderC31A67A8": Object {
      "DependsOn": Array [
        "TestConnectionBuilderServiceRole4EEAB736",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "test-bucket",
          "S3Key": "connection-builder.zip",
        },
        "Handler": "connection-builder/index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestConnectionBuilderServiceRole4EEAB736",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestConnectionBuilderServiceRole4EEAB736": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
