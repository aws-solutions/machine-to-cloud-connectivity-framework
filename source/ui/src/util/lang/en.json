{
  "action": "Action",
  "application": "Machine to Cloud Connectivity Framework",
  "area": "Area",
  "cancel": "Cancel",
  "category": "Category",
  "category.create.new.greengrass.core.device": "Create a new Greengrass core device",
  "category.bring.existing.greengrass.core.device": "Bring an existing Greengrass core device",
  "check.connectivity": "Check connectivity",
  "close": "Close",
  "confirm": "Confirm",
  "connection.actions": "Connection actions",
  "connection.logs": "Connection logs",
  "connection.name": "Connection name",
  "connections": "Connections",
  "connector.log.level": "Connector log level",
  "create": "Create",
  "create.connection": "Create connection",
  "created.by": "Created By",
  "date": "Date",
  "delete.connection": "Delete connection",
  "deregister": "Deregister",
  "download.install.script": "Download install script",
  "error": "Error",
  "get.connection.configuration": "Get connection configuration",
  "greengrass.core.device.name": "Greengrass core device name",
  "greengrass.core.devices": "Greengrass core devices",
  "iot.sitewise": "IoT SiteWise",
  "iot.sitewise.console.link": "Link to IoT SiteWise console",
  "iot.topic": "IoT Topic",
  "iterations": "Iterations",
  "kinesis.data.streams": "Kinesis Data Streams",
  "log.type": "Log type",
  "machine.ip": "Machine IP",
  "machine.name": "Machine name",
  "manage.connection": "Manage connection",
  "manage.connections": "Manage connections",
  "manage.greengrass.core.devices": "Manage Greengrass core devices",
  "message": "Message",
  "next.page": "Next page",
  "no.available.greengrass.core.devices": "There is no available Greengrass core devices.",
  "number.of.connections": "Number of connections",
  "ok": "OK",
  "page.not.found": "Page not found",
  "port": "Port",
  "prev.page": "Prev page",
  "process": "Process",
  "protocol": "Protocol",
  "read.list.tags": "A wildcard pattern for tags to read",
  "read.tags": "Specific tags to read",
  "register": "Register",
  "register.greengrass.core.device": "Register Greengrass core device",
  "refresh": "Refresh",
  "select": "Select",
  "send.data.to": "Send data to",
  "server.name": "Server name",
  "sign.out": "Sign Out",
  "site.name": "Site name",
  "start": "Start",
  "status": "Status",
  "status.delete": "Deleting",
  "status.deploy": "Deploying",
  "status.start": "Running",
  "status.stop": "Stopped",
  "status.update": "Updating",
  "stop": "Stop",
  "tags": "Tags",
  "tags.explanation": "(1 tag per line)",
  "time.interval": "Time interval",
  "timestream": "Timestream",
  "update": "Update",
  "update.connection": "Update connection",
  "view.connection.logs": "View connection logs",
  "api.url": "API URL",
  "auth.mode": "Authentication Mode",
  "verify.ssl": "Verify SSL?",
  "authentication": "Authentication",
  "username": "Username",
  "password": "Password",
  "query.config": "Query Configuration",
  "request.frequency": "Request frequency",
  "catchup.frequency": "Catchup frequency",
  "max.request.duration": "Max request duration",
  "query.offset": "Query Offset",
  "description.area": "Enter the area name where your machine / asset is located",
  "description.category": "Choose a Greengrass core device category",
  "description.connection.name": "Enter unique connection name",
  "description.greengrass.core.device.name": "Enter unique Greengrass core device name",
  "description.existing.greengrass.core.device.name": "Choose a Greengrass core device",
  "description.interval": "The interval, in seconds, at which you want to read data from the machine",
  "description.iterations": "Number of iterations that will occur before data is sent to the AWS",
  "description.logLevel": "The log level of the connector running on the greengrass device",
  "description.machine.ip": "Specify the physical IP address of the machine",
  "description.machine.name": "Enter the name for your machine / asset",
  "description.port": "Specify the end port of the server",
  "description.process": "Enter the process name for your machine / asset",
  "description.protocol": "Pick a protocol for data connection",
  "description.send.data.to": "Select where you want to send the data",
  "description.server.name": "Specify the application server name",  
  "description.site.name": "Enter the site name where your machine / asset is located",
  "description.osiPi.apiUrl": "Specify the API URL for the PI server",
  "description.osiPi.serverName": "Specify the PI server name",
  "description.osiPi.authMode": "Specify the authentication mode to use for communication with PI",
  "description.osiPi.verifySSL": "Specify whether the TLS certificate should be trusted in order to form a connection",
  "description.osiPi.username": "Required when using Basic auth. Specify the username of the PI authenticated user to connect to the server with",
  "description.osiPi.password": "Required when using Basic auth. Specify the password of the PI authenticated user to connect to the server with",
  "description.osiPi.tags": "Specify the names of tags to query",
  "description.osiPi.requestFrequency": "Specify the frequency in seconds that the PI API should be queried for data",
  "description.osiPi.catchupFrequency": "Specify the frequency in seconds that the PI API should be queried when catching up to live during recovery",
  "description.osiPi.maxRequestDuration": "Specify the maximum time interval in seconds that the PI API can query for data (end time - start time)",
  "description.osiPi.queryOffset": "Specify the offset from the current time in seconds to perform queries. Use this when delays in data writing to PI are expected.",
  "error.message.control.connection": "An error occurred while processing the connection control.",
  "error.message.create.connection": "An error occurred while creating a connection.",
  "error.message.deregister.greengrass.core.device": "An error occurred while deregistering a Greengrass core device.",
  "error.message.download.greengrass.core.device.install.script": "An error occurred while downloading an install script.",
  "error.message.get.connection": "An error occurred while getting the connection.",
  "error.message.get.connections": "An error occurred while getting connections.",
  "error.message.get.greengrass.core.devices": "An error occurred while getting Greengrass core devices.",
  "error.message.get.greengrass.core.devices.user": "You may not be able to register existing Greengrass core devices.",
  "error.message.get.logs": "An error occurred while getting logs.",
  "error.message.implementation.guide": "Please refer to the FAQ section in the implementation guide.",
  "error.message.missing.action": "No action to perform. You might need to check if an action is attached.",
  "error.message.register.greengrass.core.device": "An error occurred while registering a Greengrass core device.",
  "error.message.update.connection": "An error occurred while updating the connection.",
  "info.message.background.running": "While the connection process runs in the background, you can continue to work in the user interface.",
  "info.message.check.connectivity": "Connectivity check for {} has been issued. Please view status in the connection logs.",
  "info.message.create.connection": "{} creation has been submitted.",
  "info.message.create.connection.confirm": "Do you want to create a new connection?",
  "info.message.create.opc.ua": "To further configure your OPC-UA connection, please visit the IoT SiteWise Console after creating the connection",
  "info.message.delete.connection": "{} deletion has been submitted.",
  "info.message.download.greengrass.core.device.install.script": "You need to run the install script on your Greengrass machine.",
  "info.message.get.connection.configuration": "Configuration for {} has been pulled. Please view details in the connection logs.",
  "info.message.no.connection": "No connections found. Please create a new connection.",
  "info.message.no.greengrass.core.device": "No Greengrass core devices found. Please create a new Greengrass core device.",
  "info.message.no.logs": "No logs found for the connection.",
  "info.message.register.greengrass.core.device": "Do you want to register {} Greengrass core device?",
  "info.message.start.connection": "{} has been started.",
  "info.message.stop.connection": "{} has been stopped.",
  "info.message.update.connection": "{} update has been submitted",
  "info.message.update.connection.confirm": "Updating a connection causes a brief connection loss if the connection is running and cannot be undone. Continue?",
  "warning.message.delete.connection": "Are you sure you want to delete this connection? This action cannot be undone.",
  "warning.message.deregister.greengrass.core.device": "Are you sure you want to deregister Greengrass core device? This action cannot be undone: {}",
  "warning.message.unhealthy.greengrass.core.device": "{} is not healthy. Do you still want to register the Greengrass core device?",
  "placeholder.area": "The area name",
  "placeholder.connection.name": "The unique connection name",
  "placeholder.greengrass.core.device.name": "The unique Greengrass core device name",
  "placeholder.iterations": "The iterations to collect data before sending (1-30)",
  "placeholder.list.tags": "e.g. Simulation Items.Random.*Int*",
  "placeholder.machine.ip": "The machine IP address",
  "placeholder.machine.name": "The machine name",
  "placeholder.opcda.server.name": "OPC DA server name (e.g. Matrikon.OPC.Simulation.1)",
  "placeholder.opcua.server.name": "Unique OPC UA server name",
  "placeholder.port": "(Optional) The endpoint port",
  "placeholder.process": "The process name",
  "placeholder.site.name": "The site name",
  "placeholder.tags": "e.g. Random.Int2",
  "placeholder.time.interval": "The time interval to collect data (0.5-30)",
  "placeholder.osiPi.apiUrl": "https://ec2-12-123-123-123.compute-1.amazonaws.com/piwebapi",
  "placeholder.osiPi.serverName": "The server name. Ex: EC2AMAZ-MACHNAME",
  "placeholder.osiPi.username": "Username",
  "placeholder.osiPi.password": "Password",
  "placeholder.osiPi.tags": "SimulatedTagA\nSimulatedTagB",
  "placeholder.osiPi.requestFrequency": "The request frequency in seconds (5)",
  "placeholder.osiPi.catchupFrequency": "The catchup frequency in seconds (0.1)",
  "placeholder.osiPi.maxRequestDuration": "The maximum request duration in seconds (60)",
  "placeholder.osiPi.queryOffset": "The query offset in seconds (0)",
  "invalid.alphanumeric.hyphens.underscores": "{name} is required. It should contain only alphanumeric characters, hyphens, and underscores. The maximum characters are 30 characters.",
  "invalid.connection.name": "Connection name is required. It should be unique and contains only alphanumeric characters, hyphens, and underscores. The maximum characters are 30 characters.",
  "invalid.duplicated.server.name": "The server name is already used. The server name should be unique.",
  "invalid.greengrass.core.device.name": "Greengrass core name is required. It should be unique and can be up to 128 characters. Valid characters: a-z, A-Z, 0-9, colon (:), underscore (_), and hyphen (-).",
  "invalid.iterations": "Iterations should be integer between 1 and 30.",
  "invalid.machine.ip": "Machine IP should be a valid IP address.",
  "invalid.port": "Port should be integer between 1 and 65535.",
  "invalid.send.data.to": "Data should be sent to at least one destination",
  "invalid.server.name": "Server name is required. It should be a valid server name up to 256 characters.",
  "invalid.tags": "You need to provide at least one tag.",
  "invalid.time.interval": "Time interval should be number between 0.5 and 30.",
  "invalid.url": "URLs should be in the format of 'http(s)://server[:port]/route'",
  "invalid.username": "Username is required for BASIC authentication",
  "invalid.password": "Password is required for BASIC authentication",
  "invalid.osiPi.requestFrequency": "Request Frequency should be a number between 1 and 3600",
  "invalid.osiPi.catchupFrequency": "Request Frequency should be a number between 0.1 and 3600",
  "invalid.osiPi.maxRequestDuration": "Max Request Duration should be a number between 1 and 3600",
  "invalid.osiPi.maxRequestDurationVsRequestFrequency": "Max Request Duration must be greater than Request Frequency",
  "invalid.osiPi.catchupFrequencyVsRequestFrequency": "Catchup Frequency must be less than or equal to Request Frequency",
  "invalid.osiPi.queryOffset": "Query Offset should be a number between 0 and 86400"
}